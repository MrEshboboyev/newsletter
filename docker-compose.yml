services:
  postgres_db:
    image: postgres:15-alpine
    restart: always
    container_name: newsletterapi_postgres_db 
    environment:
      POSTGRES_DB: Newsletter_DB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  # RabbitMQ service qo'shildi. 
  # '3-management-alpine' imiji RabbitMQ bilan birga boshqaruv (Management) interfeysini ham o'z ichiga oladi.
  rabbitmq_server:
    image: rabbitmq:3-management-alpine
    container_name: newsletterapi_rabbitmq_server
    restart: always
    ports:
      - "5672:5672"   # AMQP porti (ilova ulanishi uchun)
      - "15672:15672" # Management UI porti (brauzer orqali kuzatish uchun)
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    # Default foydalanuvchi nomi va paroli ishlatilmoqda. 
    # Agar maxsus login/parol kerak bo'lsa, uni environment qismida RabbitMQ konfigratsiyasiga qo'shing.

  newsletter.api:
    image: ${DOCKER_REGISTRY-}newsletterapi
    container_name: newsletterapi
    build:
      context: .
      dockerfile: src/Newsletter.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Port=5432;Database=Newsletter_DB;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://rabbitmq_server
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      postgres_db:
        condition: service_healthy
      rabbitmq_server:
        condition: service_healthy

volumes:
  postgres_data:
